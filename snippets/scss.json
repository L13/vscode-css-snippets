{
	"null":											{ "prefix": "n",		"body": ["null"], "description": "" },
	"false":										{ "prefix": "f",		"body": ["false"], "description": "" },
	"true":											{ "prefix": "t",		"body": ["true"], "description": "" },
	
	"$name: null;":									{ "prefix": "$1",		"body": ["\\$${1:name}: ${0:null};"], "description": "" },
	"$name: null !default;":						{ "prefix": "$d1",		"body": ["\\$${1:name}: ${0:null} !default;"], "description": "" },
	"$name: null !global;":							{ "prefix": "$g1",		"body": ["\\$${1:name}: ${0:null} !global;"], "description": "" },
	
	"if()":											{ "prefix": "i$3",		"body": ["if(${1:condition}, ${2:true}, ${0:false})"], "description": "" },
	"@if {}":										{ "prefix": "@i_",		"body": ["@if ${0:condition} {", "\t", "}"], "description": "" },
	"@if not {}":									{ "prefix": "@in_",		"body": ["@if not ${0:condition} {", "\t", "}"], "description": "" },
	"@else if {}":									{ "prefix": "@ei_",		"body": ["@else if ${0:condition} {", "\t", "}"], "description": "" },
	"@else if not {}":								{ "prefix": "@ein_",	"body": ["@else if not ${0:condition} {", "\t", "}"], "description": "" },
	"@else {}":										{ "prefix": "@e_",		"body": ["@else {", "\t$0", "}"], "description": "" },
	
	"@for from through {}":							{ "prefix": "@fft_",	"body": ["@for ${1:\\$i} from ${2:1} through ${0:\\$end} {", "\t", "}"], "description": "" },
	"@each in {}":									{ "prefix": "@ei_",		"body": ["@each ${1:\\$item} in ${0:\\$items} {", "\t", "}"], "description": "" },
	"@while {}":									{ "prefix": "@w_",		"body": ["@while ${0:condition} {", "\t", "}"], "description": "" },
	
	"@at-root {}":									{ "prefix": "@ar_",		"body": ["@at-root$1 {", "\t$0", "}"], "description": "" },
	
	"@content;":									{ "prefix": "@c1",		"body": ["@content;"], "description": "" },
	"@extend ;":									{ "prefix": "@e1",		"body": ["@extend ${0:name};"], "description": "" },
	
	"@return ;":									{ "prefix": "@r",		"body": ["@return $0;"], "description": "" },
	
	"@debug;":										{ "prefix": "@d1",		"body": ["@debug ${0:message};"], "description": "" },
	"@warn;":										{ "prefix": "@w1",		"body": ["@warn ${0:message};"], "description": "" },
	"@error;":										{ "prefix": "@e1",		"body": ["@error ${0:message};"], "description": "" },
	
	"@forward '';":									{ "prefix": "@f1",		"body": ["@forward '$0';"], "description": "" },
	"@forward '' as *;":							{ "prefix": "@fa1",		"body": ["@forward '$1' as ${0:*};"], "description": "" },
	"@forward '' hide ;":							{ "prefix": "@fh1",		"body": ["@forward '$1' hide $0;"], "description": "" },
	"@forward '' show ;":							{ "prefix": "@fs1",		"body": ["@forward '$1' show $0;"], "description": "" },
	"@forward '' with ();":							{ "prefix": "@fw1",		"body": ["@forward '$1' with ($0);"], "description": "" },
	
	"@use '';":										{ "prefix": "@u1",		"body": ["@use '$0';"], "description": "" },
	"@use '' as *;":								{ "prefix": "@ua1",		"body": ["@use '$1' as ${0:*};"], "description": "" },
	"@use '' with ();":								{ "prefix": "@uw1",		"body": ["@use '$1' with ($0);"], "description": "" },
	
	"@use 'sass:color';":							{ "prefix": "@usc1",	"body": ["@use 'sass:color';"], "description": "" },
	"@use 'sass:list';":							{ "prefix": "@usl1",	"body": ["@use 'sass:list';"], "description": "" },
	"@use 'sass:map,math,meta';":					{ "prefix": "@usm1",	"body": ["@use 'sass:${1|map,math,meta|}';"], "description": "" },
	"@use 'sass:selector,string';":					{ "prefix": "@uss1",	"body": ["@use 'sass:${1|selector,string|}';"], "description": "" },
	
	"color.adjust":									{ "prefix": "ca$1",		"body": ["color.adjust(${0:\\$color})"], "description": "" },
	"color.alpha":									{ "prefix": "ca$1",		"body": ["color.alpha(${0:\\$color})"], "description": "" },
	"color.blackness":								{ "prefix": "cb$1",		"body": ["color.blackness(${0:\\$color})"], "description": "" },
	"color.blue":									{ "prefix": "cb$1",		"body": ["color.blue(${0:\\$color})"], "description": "" },
	"color.change":									{ "prefix": "cc$1",		"body": ["color.change(${0:\\$color})"], "description": "" },
	"color.complement":								{ "prefix": "cc$1",		"body": ["color.complement(${0:\\$color})"], "description": "" },
	"color.grayscale":								{ "prefix": "cg$1",		"body": ["color.grayscale(${0:\\$color})"], "description": "" },
	"color.green":									{ "prefix": "cg$1",		"body": ["color.green(${0:\\$color})"], "description": "" },
	"color.hue":									{ "prefix": "ch$1",		"body": ["color.hue(${0:\\$color})"], "description": "" },
	"color.hwb(hue, whiteness, blackness)":			{ "prefix": "ch$3",		"body": ["color.hwb(${1:\\$hue}, ${2:\\$whiteness}, ${0:\\$blackness})"], "description": "" },
	"color.hwb(hue, whiteness, blackness, alpha)":	{ "prefix": "ch$4",		"body": ["color.hwb(${1:\\$hue}, ${2:\\$whiteness}, ${3:\\$blackness}, \\$alpha: ${0:1})"], "description": "" },
	"color.invert(color)":							{ "prefix": "ci$1",		"body": ["color.invert(${0:\\$color})"], "description": "" },
	"color.invert(color, weight)":					{ "prefix": "ci$2",		"body": ["color.invert(${1:\\$color}, \\$weight: ${0:0}%)"], "description": "" },
	"color.lightness":								{ "prefix": "cl$1",		"body": ["color.lightness(${0:\\$color})"], "description": "" },
	"color.mix(color1, color2)":					{ "prefix": "cm$2",		"body": ["color.mix(${1:\\$color1}, ${0:\\$color2})"], "description": "" },
	"color.mix(color1, color2, weight)":			{ "prefix": "cm$3",		"body": ["color.mix(${1:\\$color1}, ${2:\\$color2}, \\$weight: ${0:0}%)"], "description": "" },
	"color.red":									{ "prefix": "cr$1",		"body": ["color.red(${0:\\$color})"], "description": "" },
	"color.saturate":								{ "prefix": "cs$2",		"body": ["color.saturate(${1:\\$color}, ${0:\\$amount})"], "description": "" },
	"color.saturation":								{ "prefix": "cs$1",		"body": ["color.saturation(${0:\\$color})"], "description": "" },
	"color.scale":									{ "prefix": "cs$1",		"body": ["color.scale(${0:\\$color})"], "description": "" },
	"color.whiteness":								{ "prefix": "cw$1",		"body": ["color.whiteness(${0:\\$color})"], "description": "" },
	
	"list.append(list, val)":						{ "prefix": "la$2",		"body": ["list.append(${1:\\$list}, ${0:\\$val})"], "description": "" },
	"list.append(list, val, separator)":			{ "prefix": "la$3",		"body": ["list.append(${1:\\$list}, ${2:\\$val}, \\$separator: ${3|comma,slash,space|})"], "description": "" },
	"list.index":									{ "prefix": "li$2",		"body": ["list.index(${1:\\$list}, ${0:\\$value})"], "description": "" },
	"list.is-bracketed":							{ "prefix": "lib$1",	"body": ["list.is-bracketed(${0:\\$list})"], "description": "" },
	"list.join(list1, list2)":						{ "prefix": "lj$2",		"body": ["list.join(${1:\\$list1}, ${0:\\$list2})"], "description": "" },
	"list.join(list1, list2, bracketed)":			{ "prefix": "lj$3",		"body": ["list.join(${1:\\$list1}, ${2:\\$list2}, \\$bracketed: ${3|false,true|})"], "description": "" },
	"list.join(list1, list2, separator)":			{ "prefix": "lj$3",		"body": ["list.join(${1:\\$list1}, ${2:\\$list2}, \\$separator: ${3|comma,slash,space|})"], "description": "" },
	"list.join(list1, list2, separator, bracketed)":{ "prefix": "lj$4",		"body": ["list.join(${1:\\$list1}, ${2:\\$list2}, \\$separator: ${3|auto,comma,slash,space|}, \\$bracketed: ${3|false,true|})"], "description": "" },
	"list.length":									{ "prefix": "ll$1",		"body": ["list.length(${0:\\$list})"], "description": "" },
	"list.nth":										{ "prefix": "ln$2",		"body": ["list.nth(${1:\\$list}, ${0:\\$n})"], "description": "" },
	"list.separator":								{ "prefix": "ls$1",		"body": ["list.separator(${0:\\$list})"], "description": "" },
	"list.set-nth":									{ "prefix": "lsn$1",	"body": ["list.set-nth(${1:\\$list}, ${2:\\$n}, ${0:\\$value})"], "description": "" },
	"list.slash":									{ "prefix": "ls$1",		"body": ["list.slash(${0:\\$list})"], "description": "" },
	"list.zip":										{ "prefix": "lz$1",		"body": ["list.zip(${0:\\$list})"], "description": "" },
	
	"map.deep-merge":								{ "prefix": "mdm$2",	"body": ["map.deep-merge(${1:\\$map1}, ${0:\\$map2})"], "description": "" },
	"map.deep-remove":								{ "prefix": "mdr$2",	"body": ["map.deep-remove(${1:\\$map}, ${0:\\$key})"], "description": "" },
	"map.get":										{ "prefix": "mg$2",		"body": ["map.get(${1:\\$map}, ${0:\\$key})"], "description": "" },
	"map.has-key":									{ "prefix": "mhk$2",	"body": ["map.has-key(${1:\\$map}, ${0:\\$key})"], "description": "" },
	"map.keys":										{ "prefix": "mk$1",		"body": ["map.keys(${0:\\$map})"], "description": "" },
	"map.merge":									{ "prefix": "mm$2",		"body": ["map.merge(${1:\\$map1}, ${0:\\$map2})"], "description": "" },
	"map.remove":									{ "prefix": "mr$2",		"body": ["map.remove(${1:\\$map}, ${0:\\$key})"], "description": "" },
	"map.set":										{ "prefix": "ms$3",		"body": ["map.set(${1:\\$map}, ${2:\\$key}, ${0:\\$value})"], "description": "" },
	"map.values":									{ "prefix": "mv$1",		"body": ["map.values(${0:\\$map})"], "description": "" },
	
	"math.$e,$epsilon":								{ "prefix": "me",		"body": ["math.${1|\\$e,\\$epsilon|}"], "description": "" },
	"math.$max-number,$min-number":					{ "prefix": "mmn",		"body": ["math.${1|\\$max-number,\\$min-number|}"], "description": "" },
	"math.$max-safe-integer,$min-safe-integer":		{ "prefix": "mmsi",		"body": ["math.${1|\\$max-safe-integer,\\$min-safe-integer|}"], "description": "" },
	"math.$pi":										{ "prefix": "mp",		"body": ["math.\\$pi"], "description": "" },
	
	"math.ceil":									{ "prefix": "mc$1",		"body": ["math.ceil(${0:\\$number})"], "description": "" },
	"math.clamp":									{ "prefix": "mc$3",		"body": ["math.clamp(${1:\\$min}, ${2:\\$number}, ${0:\\$max})"], "description": "" },
	"math.floor":									{ "prefix": "mf$1",		"body": ["math.floor(${0:\\$number})"], "description": "" },
	"math.max":										{ "prefix": "mm$1",		"body": ["math.max($0)"], "description": "" },
	"math.min":										{ "prefix": "mm$1",		"body": ["math.min($0)"], "description": "" },
	"math.round":									{ "prefix": "mr$1",		"body": ["math.round(${0:\\$number})"], "description": "" },
	
	"math.abs":										{ "prefix": "ma$1",		"body": ["math.abs(${0:\\$number})"], "description": "" },
	"math.hypot":									{ "prefix": "mh$1",		"body": ["math.hypot($0)"], "description": "" },
	"math.log(number)":								{ "prefix": "ml$1",		"body": ["math.log(${0:\\$number})"], "description": "" },
	"math.log(number, base)":						{ "prefix": "ml$2",		"body": ["math.log(${1:\\$number}, ${0:\\$base})"], "description": "" },
	"math.pow":										{ "prefix": "mp$2",		"body": ["math.pow(${1:\\$base}, ${0:\\$exponent})"], "description": "" },
	"math.sqrt":									{ "prefix": "ms$1",		"body": ["math.sqrt(${0:\\$number})"], "description": "" },
	
	"math.acos":									{ "prefix": "ma$1",		"body": ["math.acos(${0:\\$number})"], "description": "" },
	"math.asin":									{ "prefix": "ma$1",		"body": ["math.asin(${0:\\$number})"], "description": "" },
	"math.atan":									{ "prefix": "ma$1",		"body": ["math.atan(${0:\\$number})"], "description": "" },
	"math.atan2":									{ "prefix": "ma$2",		"body": ["math.atan2(${1:\\$y}, ${0:\\$x})"], "description": "" },
	"math.cos":										{ "prefix": "mc$1",		"body": ["math.cos(${0:\\$number})"], "description": "" },
	"math.sin":										{ "prefix": "ms$1",		"body": ["math.sin(${0:\\$number})"], "description": "" },
	"math.tan":										{ "prefix": "mt$1",		"body": ["math.tan(${0:\\$number})"], "description": "" },
	
	"math.compatible":								{ "prefix": "mc$2",		"body": ["math.compatible(${1:\\$number1}, ${0:\\$number2})"], "description": "" },
	"math.is-unitless":								{ "prefix": "miu$1",	"body": ["math.is-unitless(${0:\\$number})"], "description": "" },
	"math.unit":									{ "prefix": "mu$1",		"body": ["math.unit(${0:\\$number})"], "description": "" },
	
	"math.div":										{ "prefix": "md$2",		"body": ["math.div(${1:\\$number1}, ${0:\\$number2})"], "description": "" },
	"math.percentage":								{ "prefix": "mp$1",		"body": ["math.percentage(${0:\\$number})"], "description": "" },
	"math.random":									{ "prefix": "mr$1",		"body": ["math.random($0)"], "description": "" },
	
	"meta.calc-args":								{ "prefix": "mca$1",	"body": ["meta.calc-args(${0:\\$calc})"], "description": "" },
	"meta.calc-name":								{ "prefix": "mcn$1",	"body": ["meta.calc-name(${0:\\$calc})"], "description": "" },
	"meta.call":									{ "prefix": "mc$1",		"body": ["meta.call(${0:\\$function})"], "description": "" },
	"meta.content-exists":							{ "prefix": "mce$",		"body": ["meta.content-exists()"], "description": "" },
	"meta.feature-exists(name)":					{ "prefix": "mfe$1",	"body": ["meta.feature-exists(${0:\\$feature})"], "description": "" },
	"meta.function-exists(name)":					{ "prefix": "mfe$1",	"body": ["meta.function-exists(${0:\\$name})"], "description": "" },
	"meta.function-exists(name, module)":			{ "prefix": "mfe$2",	"body": ["meta.function-exists(${1:\\$name}, ${0:\\$module})"], "description": "" },
	"meta.get-function(name)":						{ "prefix": "mgf$1",	"body": ["meta.get-function(${0:\\$name})"], "description": "" },
	"meta.get-function(name, css)":					{ "prefix": "mgf$2",	"body": ["meta.get-function(${1:\\$name}, ${0:\\$css})"], "description": "" },
	"meta.get-function(name, css, module)":			{ "prefix": "mgf$3",	"body": ["meta.get-function(${1:\\$name}, ${2:\\$css}, ${0:\\$module})"], "description": "" },
	"meta.global-variable-exists(name)":			{ "prefix": "mgve$1",	"body": ["meta.global-variable-exists(${0:\\$name})"], "description": "" },
	"meta.global-variable-exists(name, module)":	{ "prefix": "mgve$2",	"body": ["meta.global-variable-exists(${1:\\$name}, ${0:\\$module})"], "description": "" },
	"meta.inspect":									{ "prefix": "mi$1",		"body": ["meta.inspect(${0:\\$value})"], "description": "" },
	"meta.keywords":								{ "prefix": "mk$1",		"body": ["meta.keywords(${0:\\$args})"], "description": "" },
	"meta.load-css(url)":							{ "prefix": "mlc$1",	"body": ["meta.load-css(${0:\\$url})"], "description": "" },
	"meta.load-css(url, with)":						{ "prefix": "mlc$2",	"body": ["meta.load-css(${1:\\$url}, ${0:\\$with})"], "description": "" },
	"meta.mixin-exists(name)":						{ "prefix": "mme$1",	"body": ["meta.mixin-exists(${0:\\$name})"], "description": "" },
	"meta.mixin-exists(name, module)":				{ "prefix": "mme$2",	"body": ["meta.mixin-exists(${1:\\$name}, ${0:\\$module})"], "description": "" },
	"meta.module-functions":						{ "prefix": "mmf$1",	"body": ["meta.module-functions(${0:\\$module})"], "description": "" },
	"meta.module-variables":						{ "prefix": "mmv$1",	"body": ["meta.module-variables(${0:\\$module})"], "description": "" },
	"meta.type-of":									{ "prefix": "mto$1",	"body": ["meta.type-of(${0:\\$value})"], "description": "" },
	"meta.variable-exists":							{ "prefix": "mve$1",	"body": ["meta.variable-exists(${0:\\$name})"], "description": "" },
	
	"selector.append":								{ "prefix": "sa$1",		"body": ["selector.append($0)"], "description": "" },
	"selector.extend":								{ "prefix": "se$3",		"body": ["selector.extend(${1:\\$selector}, ${2:\\$extendee}, ${0:\\$extender})"], "description": "" },
	"selector.is-superselector":					{ "prefix": "sis$2",	"body": ["selector.is-superselector(${1:\\$super}, ${0:\\$sub})"], "description": "" },
	"selector.nest":								{ "prefix": "sn$1",		"body": ["selector.nest($0)"], "description": "" },
	"selector.parse":								{ "prefix": "sp$1",		"body": ["selector.parse(${0:\\$selector})"], "description": "" },
	"selector.replace":								{ "prefix": "sr$3",		"body": ["selector.replace(${1:\\$selector}, ${2:\\$original}, ${0:\\$replacement})"], "description": "" },
	"selector.simple-selectors":					{ "prefix": "sss$1",	"body": ["selector.simple-selectors(${0:\\$selector})"], "description": "" },
	"selector.unify":								{ "prefix": "su$2",		"body": ["selector.unify(${1:\\$selector1}, ${0:\\$selector2})"], "description": "" },
	
	"string.index":									{ "prefix": "si$2",		"body": ["string.index(${1:\\$string}, ${0:\\$substring})"], "description": "" },
	"string.insert":								{ "prefix": "si$3",		"body": ["string.insert(${1:\\$string}, ${2:\\$insert}, ${0:\\$index})"], "description": "" },
	"string.length":								{ "prefix": "sl$1",		"body": ["string.length(${0:\\$string})"], "description": "" },
	"string.quote":									{ "prefix": "sq$1",		"body": ["string.quote(${0:\\$string})"], "description": "" },
	"string.slice(string, start)":					{ "prefix": "ss$2",		"body": ["string.slice(${1:\\$string}, ${0:\\$start-at})"], "description": "" },
	"string.slice(string, start, end)":				{ "prefix": "ss$3",		"body": ["string.slice(${1:\\$string}, ${2:\\$start-at}, ${0:\\$end-at})"], "description": "" },
	"string.split(string, separator)":				{ "prefix": "ss$2",		"body": ["string.split(${1:\\$string}, ${0:\\$separator})"], "description": "" },
	"string.split(string, separator, limit)":		{ "prefix": "ss$3",		"body": ["string.split(${1:\\$string}, ${2:\\$separator}, ${0:\\$limit})"], "description": "" },
	"string.to-lower-case":							{ "prefix": "stlc$1",	"body": ["string.to-lower-case(${0:\\$string})"], "description": "" },
	"string.to-upper-case":							{ "prefix": "stuc$1",	"body": ["string.to-upper-case(${0:\\$string})"], "description": "" },
	"string.unique-id":								{ "prefix": "sui$",		"body": ["string.unique-id()"], "description": "" },
	"string.unquote":								{ "prefix": "su$1",		"body": ["string.unquote(${0:\\$string})"], "description": "" }
}